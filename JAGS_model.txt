model{
##############################################################################
###  Inference from historical data
##############################################################################

  ## First test in a herd - status type = 1
  for(i1 in 1:n_status_typ1){

  ## prior probability of infection on first test
  pi1_init[i1] ~ dbeta(pi1_beta_a, pi1_beta_b)

  ## prior probability updated with test result
  pi[status_typ1[i1]] <- test_res_typ1[i1] * (
     Se[test_id_typ1[i1]] * pi1_init[i1] /
     (Se[test_id_typ1[i1]] * pi1_init[i1] +
      (1 - Sp[test_id_typ1[i1]]) * (1 - pi1_init[i1]))
    ) +
     (1 - test_res_typ1[i1]) * (
     (1 - Se[test_id_typ1[i1]]) * pi1_init[i1] /
     ((1 - Se[test_id_typ1[i1]]) * pi1_init[i1] +
       Sp[test_id_typ1[i1]] * (1 - pi1_init[i1])
     )
     )

  # status sampled from probability
  Status[status_typ1[i1]] ~ dbern(pi[status_typ1[i1]])

  }

  ## 2: first test on a month which is not first test in herd
  ## status type = 2
  for(i2 in 1:n_status_typ2){

  # probability of new infection
  logit(tau1[status_typ2[i2]]) <- inprod(risk_factors[status_typ2[i2],], theta)

  # probability of infection given previous status and dynamics
  pi2_init[i2] <- tau1[status_typ2[i2]] * (1 - Status[status_typ2[i2] - 1]) +
                  tau2 * Status[status_typ2[i2] - 1]

  # probability of infection updated with test result
  pi[status_typ2[i2]] <- test_res_typ2[i2] * (
     Se[test_id_typ2[i2]] * pi2_init[i2] /
     (Se[test_id_typ2[i2]] * pi2_init[i2] +
      (1 - Sp[test_id_typ2[i2]]) * (1 - pi2_init[i2]))
    ) +
     (1 - test_res_typ2[i2]) * (
     (1 - Se[test_id_typ2[i2]]) * pi2_init[i2] /
     ((1 - Se[test_id_typ2[i2]]) * pi2_init[i2] +
       Sp[test_id_typ2[i2]] * (1 - pi2_init[i2])
     )
     )

  # status sampled from probability
  Status[status_typ2[i2]] ~ dbern(pi[status_typ2[i2]])

  }  ## no test
  ## no_test
  for(j in 1:n_no_test){

  # probability of new infection
  logit(tau1[status_no_test[j]]) <- inprod(risk_factors[status_no_test[j],], theta)

  # probability of infection given previous status and dynamics
  pi[status_no_test[j]] <- tau1[status_no_test[j]] * (1 - Status[status_no_test[j] - 1]) +
                           tau2 * Status[status_no_test[j] - 1]

  # status sampled from probability
  Status[status_no_test[j]] ~ dbern(pi[status_no_test[j]])

  }

##############################################################################
###  Prediction of probability of infection
##############################################################################
 
## 4: status to predict without test result
for(i4 in 1:n_status_typ4){

  # probability of new infection
  logit(tau1[status_typ4[i4]]) <- inprod(risk_factors[status_typ4[i4],], theta)

  # probability of infection given previous status and dynamics
  predicted_proba[herd_id_pr4[i4]] <- tau1[status_typ4[i4]] * (1 - Status[status_typ4[i4] - 1]) +
                 tau2 * Status[status_typ4[i4] - 1]

  # status sampled from probability
  predicted_status[herd_id_pr4[i4]] ~ dbern(predicted_proba[herd_id_pr4[i4]])

  }

 
## 5: status to predict with a single test performed
for(i5 in 1:n_status_typ5){

  # probability of new infection
  logit(tau1[status_typ5[i5]]) <- inprod(risk_factors[status_typ5[i5],], theta)

  # probability of infection given previous status and dynamics
  pi5_init[i5] <- tau1[status_typ5[i5]] * (1 - Status[status_typ5[i5] - 1]) + tau2 * Status[status_typ5[i5] - 1]

  # probability of infection updated with test result
  predicted_proba[herd_id_pr5[i5]] <- test_res_typ5[i5] * (
     Se[test_id_typ5[i5]] * pi5_init[i5] /
     (Se[test_id_typ5[i5]] * pi5_init[i5] +
      (1 - Sp[test_id_typ5[i5]]) * (1 - pi5_init[i5]))
    ) +
     (1 - test_res_typ5[i5]) * (
     (1 - Se[test_id_typ5[i5]]) * pi5_init[i5] /
     ((1 - Se[test_id_typ5[i5]]) * pi5_init[i5] +
       Sp[test_id_typ5[i5]] * (1 - pi5_init[i5])
     )
     )

  # status sampled from probability
  predicted_status[herd_id_pr5[i5]] ~ dbern(predicted_proba[herd_id_pr5[i5]])

  }  
##############################################################################
###  Priors
##############################################################################

  ## Priors for sensitivities and specificities
  for(i_test in 1:n_tests){

  Se[i_test] ~ dbeta(Se_beta_a[i_test], Se_beta_b[i_test])
  Sp[i_test] ~ dbeta(Sp_beta_a[i_test], Sp_beta_b[i_test])

  }

  ## Probability of not eliminating the infection
  tau2 ~ dbeta(tau2_beta_a, tau2_beta_b)

  ## Logistic regression coefficients
  for(i_rf in 1:n_risk_factors){

    theta[i_rf] ~ dnorm(theta_norm_mean[i_rf], theta_norm_prec[i_rf])

  }

}